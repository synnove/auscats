DROP DATABASE auscats;
CREATE DATABASE auscats;
USE auscats;
CREATE TABLE ADMIN (USER_ID VARCHAR(8) NOT NULL,
    NAME VARCHAR(100),
    ORG_UNIT VARCHAR(100),
    PRIMARY KEY (USER_ID));

CREATE TABLE ADMIN_PERM (USER_ID VARCHAR(8) NOT NULL,
    PERMISSION VARCHAR(50) NOT NULL,
    PRIMARY KEY(USER_ID));

CREATE TABLE MODULES (MODULE_ID INT(6) UNSIGNED NOT NULL AUTO_INCREMENT, 
    STATUS VARCHAR(10) NOT NULL,
    NAME VARCHAR(50) NOT NULL, 
    BLURB VARCHAR(500) NOT NULL, 
    LAST_MODIFIED DATETIME(6),
    PRIMARY KEY(MODULE_ID), 
    UNIQUE KEY module (NAME));

CREATE TABLE MODULE_CONTENT (MODULE_ID INT(6) UNSIGNED NOT NULL, 
    REVISION INT(6) UNSIGNED NOT NULL, 
    CONTENT BLOB, 
    FOREIGN KEY (MODULE_ID) REFERENCES MODULES (MODULE_ID) 
    ON UPDATE NO ACTION ON DELETE NO ACTION);

CREATE TABLE QUIZ_QUESTIONS (MODULE_ID INT(6) UNSIGNED NOT NULL,
    QUESTION_ID INT(6) UNSIGNED NOT NULL AUTO_INCREMENT,
    QUESTION VARCHAR(200) NOT NULL, 
    PRIMARY KEY(QUESTION_ID),
    FOREIGN KEY (MODULE_ID) REFERENCES MODULES (MODULE_ID) 
    ON UPDATE NO ACTION ON DELETE NO ACTION);

CREATE TABLE QUIZ_ANSWERS (QUESTION_ID INT(6) UNSIGNED NOT NULL,
    ANSWER_ID INT(6) UNSIGNED NOT NULL AUTO_INCREMENT,
    ANSWER VARCHAR(200) NOT NULL,
    PRIMARY KEY(ANSWER_ID),
    FOREIGN KEY (QUESTION_ID) REFERENCES QUIZ_QUESTIONS (QUESTION_ID)
    ON UPDATE NO ACTION ON DELETE NO ACTION);

CREATE TABLE CORRECT_ANSWERS (QUESTION_ID INT(6) UNSIGNED NOT NULL,
    ANSWER_ID INT(6) UNSIGNED NOT NULL,
    FOREIGN KEY (QUESTION_ID) REFERENCES QUIZ_QUESTIONS (QUESTION_ID)
    ON UPDATE NO ACTION ON DELETE NO ACTION,
    FOREIGN KEY (ANSWER_ID) REFERENCES QUIZ_ANSWERS (ANSWER_ID)
    ON UPDATE NO ACTION ON DELETE NO ACTION);

CREATE TABLE USER_PROGRESS (USER_ID VARCHAR(8) NOT NULL,
    MODULE_ID INT(6) UNSIGNED NOT NULL,
    LAST_VIEWED INT(2) UNSIGNED NOT NULL,
    FOREIGN KEY (MODULE_ID) REFERENCES MODULES (MODULE_ID)
    ON UPDATE NO ACTION ON DELETE NO ACTION);

CREATE TABLE GRADEBOOK (USER_ID VARCHAR (8) NOT NULL,
    ORG_UNIT VARCHAR(50) NOT NULL,
    QUESTION_ID INT(6) UNSIGNED NOT NULL,
    ANSWER_ID INT(6) UNSIGNED NOT NULL,
    FOREIGN KEY (QUESTION_ID) REFERENCES QUIZ_QUESTIONS (QUESTION_ID)
    ON UPDATE NO ACTION ON DELETE NO ACTION,
    FOREIGN KEY (ANSWER_ID) REFERENCES QUIZ_ANSWERS (ANSWER_ID)
    ON UPDATE NO ACTION ON DELETE NO ACTION);

CREATE VIEW vw_USER_CORRECT_ANSWERS AS
    select USER_ID, ORG_UNIT, q.MODULE_ID, g.QUESTION_ID, g.ANSWER_ID
    FROM GRADEBOOK g, QUIZ_QUESTIONS q 
    WHERE g.QUESTION_ID = q.QUESTION_ID 
    AND g.ANSWER_ID IN (SELECT ANSWER_ID from CORRECT_ANSWERS) 
    group by q.MODULE_ID, g.QUESTION_ID;
